from typing import List, Dict, Any
from pydantic import BaseModel


class CharacterJsonResponse(BaseModel):
    message: str

    @classmethod
    def json_schema(cls) -> Dict[str, Any]:
        return {
            "type": "json_schema",
            "json_schema": {
                "name": "character_json_response",
                "strict": True,
                "schema": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string",
                            "description": "a message that is generated by the character built by the user"
                        }
                    },
                    "required": ["message"]
                }
            }
        }


class CharacterResponse(BaseModel):
    name: str
    #attendee_id: Optional[int] = None
    is_main_character: bool
    is_storyteller: bool
    message: str

class AIResponse(BaseModel):
    messages: List[CharacterResponse]
    summary: str

    @classmethod
    def json_schema(cls) -> Dict[str, Any]:
        return {
            "type": "json_schema",
            "json_schema": {
                "name": "ai_response",
                "strict": True,
                "schema": {
                    "type": "object",
                    "properties": {
                        "messages": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "캐릭터의 이름"
                                    },
                                    "is_main_character": {
                                        "type": "boolean",
                                        "description": "주인공 여부"
                                    },
                                    "is_storyteller": {
                                        "type": "boolean",
                                        "description": "내레이터 여부"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "캐릭터의 메시지"
                                    }
                                },
                                "required": ["name", "is_main_character", "is_storyteller", "message"]
                            }
                        },
                        "summary": {
                            "type": "string",
                            "description": "대화 요약"
                        }
                    },
                    "required": ["messages", "summary"]
                }
            }
        }